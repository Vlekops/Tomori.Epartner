//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Vleko.Result;
using Tomori.Epartner.Core.Config.Query;
using Tomori.Epartner.Core.Request;
using Tomori.Epartner.Core.Config.Command;
using Microsoft.AspNetCore.Authorization;
using Tomori.Epartner.Core.Attributes;
using Tomori.Epartner.Core.Sync.Command;
using Azure.Core;
using Tomori.Epartner.Core.General.Sync.Command;

namespace Tomori.Epartner.API.Controllers
{
    public partial class SyncController : BaseController<SyncController>
    {
        [AllowAnonymous]
        [HttpGet(template: "sync_afiliasi")]
        public async Task<IActionResult> SyncAfiliasi(DateTime CompletedDateForm)
        {
            return Wrapper(await _mediator.Send(new AfiliasiSyncRequest(){
                CompletedDateForm = CompletedDateForm
            }));
        }

        [AllowAnonymous]
        [HttpGet(template: "sync_branch")]
        public async Task<IActionResult> SyncBranch()
        {
            return Wrapper(await _mediator.Send(new BranchSyncRequest()));
        }

        [AllowAnonymous]
        [HttpGet(template: "sync_izin_usaha")]
        public async Task<IActionResult> SyncIzinUsaha(string K3Sname)
        {
            return Wrapper(await _mediator.Send(new IzinUsahaSyncRequest() { K3SName = K3Sname }));
        }

        [AllowAnonymous]
        [HttpGet(template: "sync_landasan_hukum")]
        public async Task<IActionResult> SyncLandasanHukum(DateTime CompletedDateForm)
        {
            return Wrapper(await _mediator.Send(new LandasanHukumSyncRequest()
            {
                CompleteDateFrom = CompletedDateForm
            }));
        }

        [HttpPost(template: "sync_vendor")]
        public async Task<IActionResult> SyncVendor(DateTime CompletedDateForm)
        {
            return Wrapper(await _mediator.Send(new VendorSyncRequest()
            {
                CompletedDateForm = CompletedDateForm
            }));
        }

        [AllowAnonymous]
        [HttpGet(template: "sync_pajak")]
        public async Task<IActionResult> SyncPajak(DateTime CompletedDateForm)
        {
            return Wrapper(await _mediator.Send(new PajakSyncRequest()
            {
                CompleteDateForm = CompletedDateForm
            }));
        }

        [AllowAnonymous]
        [HttpGet(template: "sync_neraca")]
        public async Task<IActionResult> SyncNeraca(string K3Sname)
        {
            return Wrapper(await _mediator.Send(new NeracaSyncRequest() { K3SName = K3Sname }));
        }

        [AllowAnonymous]
        [HttpGet(template: "sync_pengalaman")]
        public async Task<IActionResult> SyncPengalaman(DateTime CompletedDateForm)
        {
            return Wrapper(await _mediator.Send(new PengalamanSyncRequest()
            {
                CompletedDateForm = CompletedDateForm
            }));
        }

        [AllowAnonymous]
        [HttpGet(template: "sync_rekening_bank")]
        public async Task<IActionResult> SyncRekeningBank(DateTime CompletedDateForm)
        {
            return Wrapper(await _mediator.Send(new RekeningBankSyncRequest()
            {
                CompletedDateFrom = CompletedDateForm
            }));
        }

        [AllowAnonymous]
        [HttpGet(template: "sync_susunan_pengurus")]
        public async Task<IActionResult> SyncSusunanPengurus(DateTime CompletedDateForm)
        {
            return Wrapper(await _mediator.Send(new SusunanPengurusSyncRequest()
            {
                CompletedDateForm = CompletedDateForm
            }));
        }

        [AllowAnonymous]
        [HttpGet(template: "sync_susunan_saham")]
        public async Task<IActionResult> SyncSusunanSaham(DateTime CompletedDateForm)
        {
            return Wrapper(await _mediator.Send(new SusunanSahamSyncRequest()
            {
                CompletedDateFrom = CompletedDateForm
            }));
        }

        [AllowAnonymous]
        [HttpGet(template: "sync_kompetensi")]
        public async Task<IActionResult> SyncKompetensi(DateTime CompletedDateForm)
        {
            return Wrapper(await _mediator.Send(new KompetensiSyncRequest()
            {
                CompletedDateForm = CompletedDateForm
            }));
        }

        [AllowAnonymous]
        [HttpGet(template: "sync_sanksi_history")]
        public async Task<IActionResult> SyncSanksiHistory(DateTime CompletedDateForm)
        {
            return Wrapper(await _mediator.Send(new SanksiHistorySyncRequest()
            {
                CompletedDateFrom = CompletedDateForm
            }));
        }

        [AllowAnonymous]
        [HttpGet(template: "sync_spda_history")]
        public async Task<IActionResult> SyncSpdaHistory(string K3Sname)
        {
            return Wrapper(await _mediator.Send(new SpdaHistorySyncRequest() { K3sname = K3Sname }));
        }

        [AllowAnonymous]
        [HttpGet(template: "sync_announcement")]
        public async Task<IActionResult> AnnouncementHistory()
        {
            return Wrapper(await _mediator.Send(new AnnouncementSyncRequest()));
        }
    }
}

