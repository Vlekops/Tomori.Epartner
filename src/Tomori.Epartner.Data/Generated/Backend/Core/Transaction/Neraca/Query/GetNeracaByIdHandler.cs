//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using AutoMapper;
using MediatR;
using Vleko.DAL.Interface;
using Microsoft.EntityFrameworkCore;
using System.ComponentModel.DataAnnotations;
using Microsoft.Extensions.Logging;
using Tomori.Epartner.Data;
using Tomori.Epartner.Data.Model;
using Vleko.Result;
using Tomori.Epartner.Core.Response;

namespace Tomori.Epartner.Core.Neraca.Query
{

    public class GetNeracaByIdRequest : IRequest<ObjectResponse<NeracaResponse>>
    {
        [Required]
        public int Id { get; set; }
    }
    internal class GetNeracaByIdHandler : IRequestHandler<GetNeracaByIdRequest, ObjectResponse<NeracaResponse>>
    {
        private readonly ILogger _logger;
        private readonly IMapper _mapper;
        private readonly IUnitOfWork<ApplicationDBContext> _context;
        public GetNeracaByIdHandler(
            ILogger<GetNeracaByIdHandler> logger,
            IMapper mapper,
            IUnitOfWork<ApplicationDBContext> context
            )
        {
            _logger = logger;
            _mapper = mapper;
            _context = context;
        }
        public async Task<ObjectResponse<NeracaResponse>> Handle(GetNeracaByIdRequest request, CancellationToken cancellationToken)
        {
            ObjectResponse<NeracaResponse> result = new ObjectResponse<NeracaResponse>();
            try
            {
                var item = await _context.Entity<Tomori.Epartner.Data.Model.TrsNeraca>().Where(d => d.Id == request.Id).FirstOrDefaultAsync();
                if (item != null)
                {
                    result.Data = _mapper.Map<NeracaResponse>(item);
                    result.OK();
                }
                else
                    result.NotFound($"Id Tomori.Epartner.Data.Model.TrsNeraca {request.Id} Tidak Ditemukan");
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Failed Get Detail Neraca", request.Id);
                result.Error("Failed Get Detail Neraca", ex.Message);
            }
            return result;
        }
    }
}

